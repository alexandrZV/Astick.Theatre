@model Cl_Session

@using Newtonsoft.Json;

@{
	Layout = "";
	var m_JsonSerializerSettings = new JsonSerializerSettings {
		ReferenceLoopHandling = ReferenceLoopHandling.Ignore
	};
}

<!DOCTYPE html>
<html>
<head>
	<meta charset="utf-8" />
	<meta name="viewport" content="width=device-width, initial-scale=1.0" />
	<title>Карта зрительных мест</title>

	<environment names="Development">
		<link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.css" />
		<link rel="stylesheet" href="~/css/session.css" asp-append-version="true" />
	</environment>
	<environment names="Staging,Production">
		<link rel="stylesheet" href="https://ajax.aspnetcdn.com/ajax/bootstrap/3.3.7/css/bootstrap.min.css"
					asp-fallback-href="~/lib/bootstrap/dist/css/bootstrap.min.css"
					asp-fallback-test-class="sr-only" asp-fallback-test-property="position" asp-fallback-test-value="absolute" />
		<link rel="stylesheet" href="~/css/session.min.css" asp-append-version="true" />
	</environment>
	<script type="text/javascript">
		//var m_Seats = @Html.Raw(JsonConvert.SerializeObject(Model.p_Seats, m_JsonSerializerSettings));
	</script>
</head>
<body>
	<page-info title="Концерт" />
	<div id="hall">
		@{
			Array typesSeats = Enum.GetValues(typeof(Cl_Seat.E_Type));
			Array.Reverse(typesSeats);
			int maxSeatNumbers = 0;
			int maxSeatNumbersScene = 0;
			int countRows = 0;
			foreach (Cl_Seat.E_Type type in typesSeats) {
				countRows += Model.p_Hall.f_GetRowsCount(type);
				if (maxSeatNumbers < Model.p_Hall.f_GetRowNumbersCount(type)) {
					maxSeatNumbers = Model.p_Hall.f_GetRowNumbersCount(type);
				}
				if (type == Cl_Seat.E_Type.Parquet || type == Cl_Seat.E_Type.Amphitheater || type == Cl_Seat.E_Type.Mezzanine) {
					if (maxSeatNumbersScene < Model.p_Hall.f_GetRowNumbersCount(type)) {
						maxSeatNumbersScene = Model.p_Hall.f_GetRowNumbersCount(type);
					}
				}
			}
		}
		<h3>@string.Format("Концерт \"{0}\" {1}", Model.p_Hall.p_Name, Model.p_Date.ToString("dd.MM.yyyy"))</h3>
		<div class="hall_legend">
			@foreach (Cl_Seat.E_Type type in typesSeats) {
				if (Model.p_Hall.f_GetRowsCount(type) > 0) {
				<div class="hall_legend_item hall_legend_item_@Enum.GetName(typeof(Cl_Seat.E_Type), type).ToLower()">
					<div class="hall_legend_item_img"></div>
					<div class="hall_legend_item_val"> - @Model.f_GetPrice(type) руб.</div>
				</div>
				}
			}
		</div>
		<table class="hall_schema">
			@{
				int numberRow = countRows;
				foreach (Cl_Seat.E_Type type in typesSeats) {
					for (int i = 1; i <= Model.p_Hall.f_GetRowsCount(type); i++) {
						string classGroupend = ((type == Cl_Seat.E_Type.Balcony && i == Model.p_Hall.f_GetRowsCount(type)) || numberRow == 1) ? "hall_schema_row_groupend" : "";
						<tr class="hall_schema_row hall_schema_row_@Enum.GetName(typeof(Cl_Seat.E_Type), type).ToLower() @classGroupend">
							<td class="hall_schema_cell hall_schema_row_header"><div class="hall_schema_cell_content">@numberRow</div></td>
							<td class="hall_schema_row_header_sep">&nbsp;</td>
							@for (int y = maxSeatNumbers - Model.p_Hall.f_GetRowNumbersCount(type); y >= 1; y--) {
							<td class="hall_schema_cell">&nbsp;</td>
							}
							@for (int y = Model.p_Hall.f_GetRowNumbersCount(type); y >= 1; y--) {
								Cl_Seat seat = Model.p_Seats.FirstOrDefault(s => s.p_Type == type && s.p_Row == i && s.p_Number == y);
								<td class="hall_schema_cell"><div class="hall_schema_cell_content hall_schema_seat @if (seat.p_TypeEmployment == Cl_Seat.E_TypeEmployment.Booked) { <text>hall_schema_seat_booked</text> } else if (seat.p_TypeEmployment == Cl_Seat.E_TypeEmployment.Purchased) { <text>hall_schema_seat_purchased</text> }" data-id="@seat.p_ID" data-fio="@seat.p_UserFIO" data-mobile="@seat.p_Mobile" data-promo="@seat.p_Promo" data-price="@((int)seat.p_Price)" data-comment="@seat.p_Comment">@y</div></td>
							}
						</tr>
						numberRow--;
					}
				}
				<tr class="hall_schema_row hall_schema_row_scene hall_schema_row_groupend">
					<td class="hall_schema_cell hall_schema_row_header"><div class="hall_schema_cell_content">&nbsp;</div></td>
					<td class="hall_schema_row_header_sep">&nbsp;</td>
					@for (int y = maxSeatNumbers - maxSeatNumbersScene; y >= 1; y--) {
					<td class="hall_schema_cell">&nbsp;</td>
					}
					<td class="hall_schema_cell" colspan="@maxSeatNumbersScene"><div class="hall_schema_cell_content hall_schema_scene">СЦЕНА</div></td>
				</tr>
			}
		</table>
		<div class="hall_buttons">
			<button type="submit" class="btn btn-info hidden" id="bSeatInfo">Информация</button>
			<button type="submit" class="btn btn-primary hidden" id="bSeatLock">Забронировать</button>
			<button type="submit" class="btn btn-primary hidden" id="bSeatSell">Продать</button>
			<button type="button" class="btn btn-danger hidden" id="bSeatUnLock">Освободить</button>
		</div>


		@*<table class="hall_schema">
				@{
					Array typesSeats = Enum.GetValues(typeof(Cl_Seat.E_Type));
					Array.Reverse(typesSeats);
					foreach (Cl_Seat.E_Type type in typesSeats) {
						for (int i = 1; i <= Model.p_Hall.f_GetRowsCount(type); i++) {
						<tr class="hall_schema_row">
							<td class="hall_schema_row_title">Ряд №@i</td>
							@for (int y = 1; y <= Model.p_Hall.f_GetRowNumbersCount(type); y++) {
							Cl_Seat seat = Model.p_Seats.FirstOrDefault(s => s.p_Type == type && s.p_Row == i && s.p_Number == y);
							<td class="hall_schema_row_number @if (seat.p_TypeEmployment == Cl_Seat.E_TypeEmployment.Booked) { <text>hall_schema_row_number_booked</text> } else if (seat.p_TypeEmployment == Cl_Seat.E_TypeEmployment.Purchased) { <text>hall_schema_row_number_purchased</text> }" data-toggle="modal" data-target="#modalSeatEdit" data-id="@seat.p_ID" data-row="@i" data-col="@y">
								<div class="hall_schema_row_number_val">@y</div>
								<div class="hall_schema_row_number_price"><span class="hall_schema_row_number_price_val">@((int)seat.p_Price)</span> руб.</div>
							</td>
						}
						</tr>
						}
					}
				}
			</table>*@
		<div id="modalSeatEdit" class="modal fade" role="dialog">
			<div class="modal-dialog">
				<form class="modal-content" action="javascript:void(0);">
					<div class="modal-header">
						<button type="button" class="close" data-dismiss="modal">&times;</button>
						<h4 class="modal-title">Редактирование места</h4>
					</div>
					<div class="modal-body">
						<div class="form-group">
							<label for="elFIO">ФИО</label>
							<input type="text" class="form-control" id="elFIO" required placeholder="ФИО">
						</div>
						<div class="form-group">
							<label for="elMobile">Мобильный</label>
							<input type="text" class="form-control" id="elMobile" required placeholder="Мобильный">
						</div>
						<div class="form-group">
							<label for="elPromo">Промо код</label>
							<input type="text" class="form-control" id="elPromo" placeholder="Промо код">
						</div>
						<div class="form-group">
							<label for="elPrice">Стоимость</label>
							<input type="text" class="form-control" id="elPrice" required placeholder="Стоимость" readonly>
						</div>
						<div class="form-group">
							<label for="elComment">Примечание</label>
							<input type="text" class="form-control" id="elComment" placeholder="Примечание">
						</div>
					</div>
					<div class="modal-footer">
						<button type="submit" class="btn btn-primary" id="bModalSeatOk" data-dismiss="modal">Ok</button>
						<button type="submit" class="btn btn-primary" id="bModalSeatAction">Ok</button>
						<button type="button" class="btn btn-default" id="bModalSeatCancel" data-dismiss="modal">Отмена</button>
					</div>
				</form>
			</div>
		</div>
	</div>
	<environment names="Development">
		<script src="~/lib/jquery/dist/jquery.js"></script>
		<script src="~/lib/bootstrap/dist/js/bootstrap.js"></script>
		<script src="~/js/site.js" asp-append-version="true"></script>
	</environment>
	<environment names="Staging,Production">
		<script src="https://ajax.aspnetcdn.com/ajax/jquery/jquery-2.2.0.min.js"
						asp-fallback-src="~/lib/jquery/dist/jquery.min.js"
						asp-fallback-test="window.jQuery"
						crossorigin="anonymous"
						integrity="sha384-K+ctZQ+LL8q6tP7I94W+qzQsfRV2a+AfHIi9k8z8l9ggpc8X+Ytst4yBo/hH+8Fk">
		</script>
		<script src="https://ajax.aspnetcdn.com/ajax/bootstrap/3.3.7/bootstrap.min.js"
						asp-fallback-src="~/lib/bootstrap/dist/js/bootstrap.min.js"
						asp-fallback-test="window.jQuery && window.jQuery.fn && window.jQuery.fn.modal"
						crossorigin="anonymous"
						integrity="sha384-Tc5IQib027qvyjSMfHjOMaLkfuWVxZxUPnCJA7l2mCWNIpG9mGCD8wGNIcPD7Txa">
		</script>
		<script src="~/js/site.min.js" asp-append-version="true"></script>
	</environment>
	<script type="text/javascript">
		var elBSeatInfo = document.getElementById("bSeatInfo");
		var elBSeatLock = document.getElementById("bSeatLock");
		var elBSeatSell = document.getElementById("bSeatSell");
		var elBSeatUnLock = document.getElementById("bSeatUnLock");
		var elIFIO = document.getElementById("elFIO");
		var elIMobile = document.getElementById("elMobile");
		var elIPromo = document.getElementById("elPromo");
		var elIPrice = document.getElementById("elPrice");
		var elIComment = document.getElementById("elComment");
		var m_SeatSelect = null;
		var m_SeatsLock = [];
		var m_SeatsSell = [];
		var m_SeatsUnlock = [];
		var elModalForm = document.querySelector("#modalSeatEdit form");
		var elModalSeatEdit$ = $("#modalSeatEdit");
		var elModalSeatEditTitle$ = $('.modal-title', elModalSeatEdit$);
		var elBModalSeatOk = document.getElementById("bModalSeatOk");
		var elBModalSeatAction = document.getElementById("bModalSeatAction");
		var elBModalSeatCancel = document.getElementById("bModalSeatCancel");

		function f_GetSeatFromCell(a_Cell) {
			var seat = new Object();
			seat.p_ID = $(a_Cell).attr("data-id");
			seat.p_UserFIO = $(a_Cell).attr("data-fio");
			seat.p_Mobile = $(a_Cell).attr("data-mobile");
			seat.p_Promo = $(a_Cell).attr("data-promo");
			seat.p_Price = parseInt($(a_Cell).attr("data-price"));
			seat.p_Comment = $(a_Cell).attr("data-comment");
			return seat;
		}

		function f_ResetSelectors() {
			m_SeatsLock = [];
			m_SeatsSell = [];
			m_SeatsUnlock = [];
			m_SeatSelect = null;

			var selects$ = $('.hall_schema_seat_select');
			if (selects$.length === 1 && (selects$.hasClass('hall_schema_seat_booked') || selects$.hasClass('hall_schema_seat_purchased'))) {
				m_SeatSelect = f_GetSeatFromCell(selects$[0]);
			} else {
				m_SeatSelect = null;
			}
			$('.hall_schema_seat_select:not(.hall_schema_seat_booked):not(.hall_schema_seat_purchased)').each(function () {
				m_SeatsLock.push(f_GetSeatFromCell(this));
			});
			$('.hall_schema_seat_select:not(.hall_schema_seat_purchased)').each(function () {
				m_SeatsSell.push(f_GetSeatFromCell(this));
			});
			$('.hall_schema_seat_select.hall_schema_seat_booked,.hall_schema_seat_select.hall_schema_seat_purchased').each(function () {
				m_SeatsUnlock.push(f_GetSeatFromCell(this));
			});

			if (m_SeatSelect !== null) {
				if (elBSeatInfo.classList.contains('hidden')) elBSeatInfo.classList.remove('hidden');
			} else {
				elBSeatInfo.classList.add('hidden');
			}
			if (m_SeatsLock.length > 0) {
				if (elBSeatLock.classList.contains('hidden')) elBSeatLock.classList.remove('hidden');
			} else {
				elBSeatLock.classList.add('hidden');
			}
			if (m_SeatsSell.length > 0) {
				if (elBSeatSell.classList.contains('hidden')) elBSeatSell.classList.remove('hidden');
			} else {
				elBSeatSell.classList.add('hidden');
			}
			if (m_SeatsUnlock.length > 0) {
				if (elBSeatUnLock.classList.contains('hidden')) elBSeatUnLock.classList.remove('hidden');
			} else {
				elBSeatUnLock.classList.add('hidden');
			}
		}

		$('.hall_schema_seat').click(function () {
			if (this.classList.contains('hall_schema_seat_select')) {
				this.classList.remove('hall_schema_seat_select');
				f_ResetSelectors();
			} else {
				this.classList.add('hall_schema_seat_select');
				f_ResetSelectors();
			}
		});

		var f_ActionSeat = function (a_Seats, a_TypeEmployment) {
			if (a_Seats.length > 0) {
				var ids = [];
				for (var i in a_Seats) {
					ids.push(a_Seats[i].p_ID);
				}
				$.post("/admin/sessions/f_ActionSeat", { a_SeatsID: ids, a_UserFIO: elIFIO.value, a_Mobile: elIMobile.value, a_Promo: elIPromo.value, a_TypeEmployment: a_TypeEmployment, a_Comment: elIComment.value }, function (data) {
					if (data.error === undefined) {
						for (var i in data) {
							var elSelects$ = $('.hall_schema_seat[data-id = "' + data[i].p_ID + '"]');
							elSelects$.attr('data-fio', data[i].p_UserFIO);
							elSelects$.attr('data-mobile', data[i].p_Mobile);
							elSelects$.attr('data-promo', data[i].p_Promo);
							elSelects$.attr('data-price', data[i].p_Price);
							elSelects$.attr('data-comment', data[i].p_Comment);
							if (data[i].p_TypeEmployment === @Cl_Seat.E_TypeEmployment.Booked.GetHashCode()) {
								elSelects$.addClass('hall_schema_seat_booked');
							} else if (a_TypeEmployment === @Cl_Seat.E_TypeEmployment.Purchased.GetHashCode()) {
								elSelects$.addClass('hall_schema_seat_purchased');
							}
						}
						$('.hall_schema_seat_select').removeClass('hall_schema_seat_select');
						f_ResetSelectors();
					} else {
						alert(data.error);
					}
					elModalSeatEdit$.modal("hide");
				});
			}
		}
		elBSeatInfo.addEventListener("click", function () {
			if (m_SeatSelect !== null) {
				elIFIO.readOnly = true;
				elIMobile.readOnly = true;
				elIPromo.readOnly = true;
				elIComment.readOnly = true;
				elIFIO.value = m_SeatSelect.p_UserFIO;
				elIMobile.value = m_SeatSelect.p_Mobile;
				elIPromo.value = m_SeatSelect.p_Promo;
				elIPrice.value = m_SeatSelect.p_Price;
				elIComment.value = m_SeatSelect.p_Comment;
				if (elBModalSeatOk.classList.contains('hidden')) elBModalSeatOk.classList.remove('hidden');
				elBModalSeatAction.classList.add('hidden');
				elBModalSeatCancel.classList.add('hidden');
				elModalSeatEdit$.removeAttr('data-type');
				elModalSeatEdit$.modal("show");
			}
		});
		elBSeatLock.addEventListener("click", function () {
			var sum = 0;
			var count = 0;
			for (var i in m_SeatsLock) {
				sum += m_SeatsLock[i].p_Price;
				count++;
			}
			if (count == 1) {
				elModalSeatEditTitle$.html("Бронирование 1 места");
			} else {
				elModalSeatEditTitle$.html("Бронирование " + count + " мест");
			}
			elIPrice.value = sum;
			elBModalSeatAction.textContent = "Забронировать"
			elIFIO.readOnly = false;
			elIMobile.readOnly = false;
			elIPromo.readOnly = false;
			elIComment.readOnly = false;
			elBModalSeatOk.classList.add('hidden');
			if (elBModalSeatAction.classList.contains('hidden')) elBModalSeatAction.classList.remove('hidden');
			if (elBModalSeatCancel.classList.contains('hidden')) elBModalSeatCancel.classList.remove('hidden');
			elModalSeatEdit$.attr('data-type', @Cl_Seat.E_TypeEmployment.Booked.GetHashCode());
			elModalSeatEdit$.modal("show");
		});
		elBSeatSell.addEventListener("click", function () {
			var sum = 0;
			var count = 0;
			for (var i in m_SeatsSell) {
				sum += m_SeatsSell[i].p_Price;
				count++;
			}
			if (count == 1) {
				elModalSeatEditTitle$.html("Продажа 1 места");
			} else {
				elModalSeatEditTitle$.html("Продажа " + count + " мест");
			}
			elIPrice.value = sum;
			elBModalSeatAction.textContent = "Продать"
			elIFIO.readOnly = false;
			elIMobile.readOnly = false;
			elIPromo.readOnly = false;
			elIComment.readOnly = false;
			elBModalSeatOk.classList.add('hidden');
			if (elBModalSeatAction.classList.contains('hidden')) elBModalSeatAction.classList.remove('hidden');
			if (elBModalSeatCancel.classList.contains('hidden')) elBModalSeatCancel.classList.remove('hidden');
			elModalSeatEdit$.attr('data-type', @Cl_Seat.E_TypeEmployment.Purchased.GetHashCode());
			elModalSeatEdit$.modal("show");
		});
		elBSeatUnLock.addEventListener("click", function () {
			if (m_SeatsUnlock.length > 0) {
				if (confirm("Вы уверены, что хотите снять бронь " + m_SeatsUnlock.length + " выбранных мест?")) {
					var ids = [];
					for (var i in m_SeatsUnlock) {
						ids.push(m_SeatsUnlock[i].p_ID);
					}
					var seatID = elBSeatUnLock.getAttribute('data-id');
					$.post("/admin/sessions/f_RemoveSeats", { a_SeatsID: ids }, function (data) {
						if (data.error === undefined) {
							for (var i in data) {
								$('.hall_schema_seat[data-id = "' + data[i].p_ID + '"]').removeClass('hall_schema_seat_booked').removeClass('hall_schema_seat_purchased');
							}
							$('.hall_schema_seat_select').removeClass('hall_schema_seat_select');
							f_ResetSelectors();
						} else {
							alert(data.error);
						}
					});
				}
			}
		});
		elBModalSeatAction.addEventListener("click", function () {
			if (elModalForm.checkValidity()) {
				var seats = [];
				if (parseInt(elModalSeatEdit$.attr('data-type')) === @Cl_Seat.E_TypeEmployment.Booked.GetHashCode()) {
					f_ActionSeat(m_SeatsLock, @Cl_Seat.E_TypeEmployment.Booked.GetHashCode());
				} else if (parseInt(elModalSeatEdit$.attr('data-type')) === @Cl_Seat.E_TypeEmployment.Purchased.GetHashCode()) {
					f_ActionSeat(m_SeatsSell, @Cl_Seat.E_TypeEmployment.Purchased.GetHashCode());
				} else {

				}
			}
		});


		@*var elIFIO = document.getElementById("elFIO");
		var elIMobile = document.getElementById("elMobile");
		var elIPrice = document.getElementById("elPrice");
		var elIComment = document.getElementById("elComment");
		var elBSeatLock = document.getElementById("bSeatLock");
		var elBSeatSell = document.getElementById("bSeatSell");
		var elBSeatEdit = document.getElementById("bSeatEdit");
		var elBSeatUnLock = document.getElementById("bSeatUnLock");
		var f_LockSeat = function(a_Row, a_Col, a_TypeEmployment) {
			$.post("/admin/sessions/f_SetSeat", { p_SessionID: '@Model.p_ID', p_Row: a_Row, p_Number: a_Col, p_UserFIO: elIFIO.value, p_Mobile: elIMobile.value, p_Price: elIPrice.value, p_TypeEmployment: a_TypeEmployment, p_Comment: elIComment.value }, function (data) {
				if (data.error === undefined) {
					var seat;
					for (var i in m_Seats) {
						if (m_Seats[i].p_Row === data.p_Row && m_Seats[i].p_Number === data.p_Number) {
							seat = m_Seats[i];
							break;
						}
					}
					if (seat !== undefined) {
						seat.p_UserFIO = data.p_UserFIO;
						seat.p_Mobile = data.p_Mobile;
						seat.p_Price = data.p_Price;
						seat.p_Comment = data.p_Comment;
					} else {
						m_Seats.push(data);
						seat = data;
					}
					if (a_TypeEmployment === @Cl_Seat.E_TypeEmployment.Booked.GetHashCode()) {
						$('.hall_schema_row_number[data-row = "' + a_Row + '"][data-col = "' + a_Col + '"]').addClass('hall_schema_row_number_booked');
					} else if (a_TypeEmployment === @Cl_Seat.E_TypeEmployment.Purchased.GetHashCode()) {
						$('.hall_schema_row_number[data-row = "' + a_Row + '"][data-col = "' + a_Col + '"]').addClass('hall_schema_row_number_purchased');
					}
					$('.hall_schema_row_number[data-row = "' + a_Row + '"][data-col = "' + a_Col + '"] .hall_schema_row_number_price_val').html(seat.p_Price);
				} else {
					alert(data.error);
				}
			});
		}
		elBSeatLock.addEventListener("click", function () {
			if (document.querySelector("#modalSeatEdit form").checkValidity()) {
				var row = parseInt(elBSeatLock.getAttribute('data-row'));
				var col = parseInt(elBSeatLock.getAttribute('data-col'));
				f_LockSeat(row, col, @Cl_Seat.E_TypeEmployment.Booked.GetHashCode());
				$("#modalSeatEdit").modal("hide");
			}
		});
		elBSeatSell.addEventListener("click", function () {
			if (document.querySelector("#modalSeatEdit form").checkValidity()) {
				var row = parseInt(elBSeatLock.getAttribute('data-row'));
				var col = parseInt(elBSeatLock.getAttribute('data-col'));
				f_LockSeat(row, col, @Cl_Seat.E_TypeEmployment.Purchased.GetHashCode());
				$("#modalSeatEdit").modal("hide");
			}
		});
		elBSeatEdit.addEventListener("click", function () {
			if (document.querySelector("#modalSeatEdit form").checkValidity()) {
				var row = parseInt(elBSeatLock.getAttribute('data-row'));
				var col = parseInt(elBSeatLock.getAttribute('data-col'));
				f_LockSeat(row, col, @Cl_Seat.E_TypeEmployment.Free.GetHashCode());
				$("#modalSeatEdit").modal("hide");
			}
		});
		elBSeatUnLock.addEventListener("click", function () {
			if (confirm("Вы уверены, что хотите снять бронь места?")) {
				var seatID = elBSeatUnLock.getAttribute('data-id');
				$.post("/admin/sessions/f_RemoveSeat", { a_SeatID: seatID }, function (data) {
					if (data.error === undefined) {
						var index;
						for (var i in m_Seats) {
							if (m_Seats[i].p_Row === data.p_Row && m_Seats[i].p_Number === data.p_Number) {
								index = i;
								break;
							}
						}
						if (index !== undefined) {
							m_Seats.splice(index, 1);
						}
						$('.hall_schema_row_number[data-row = "' + data.p_Row + '"][data-col = "' + data.p_Number + '"]').removeClass('hall_schema_row_number_booked').removeClass('hall_schema_row_number_purchased');
					} else {
						alert(data.error);
					}
				});
			}
		});
		$('#modalSeatEdit').on('show.bs.modal', function (event) {
			var button$ = $(event.relatedTarget)
			var row = parseInt(button$.data('row'));
			var col = parseInt(button$.data('col'));
			var seatId = button$.data('id');
			elBSeatLock.setAttribute('data-row', row);
			elBSeatLock.setAttribute('data-col', col);
			elBSeatSell.setAttribute('data-row', row);
			elBSeatSell.setAttribute('data-col', col);
			elBSeatEdit.setAttribute('data-row', row);
			elBSeatEdit.setAttribute('data-col', col);
			elBSeatUnLock.setAttribute('data-id', seatId);
			var seat;
			for (var i in m_Seats) {
				if (m_Seats[i].p_Row === row && m_Seats[i].p_Number === col) {
					seat = m_Seats[i];
					break;
				}
			}
			if (seat !== undefined) {
				elIFIO.value = seat.p_UserFIO;
				elIMobile.value = seat.p_Mobile;
				elIPrice.value = seat.p_Price;
				elIComment.value = seat.p_Comment;
				if (seat.p_TypeEmployment === @Cl_Seat.E_TypeEmployment.Free.GetHashCode()) {
					if (elBSeatEdit.classList.contains('hidden')) elBSeatEdit.classList.remove('hidden');
					elBSeatUnLock.classList.add('hidden');
				} else {
					elBSeatEdit.classList.add('hidden');
					if (elBSeatUnLock.classList.contains('hidden')) elBSeatUnLock.classList.remove('hidden');
				}
			} else {
				elIFIO.value = "";
				elIMobile.value = "";
				elIPrice.value = "";
				elIComment.value = "";
			}
		});*@
	</script>
</body>
